# Generated by Django 4.0.4 on 2022-05-30 16:26

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Soldier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('middle_name', models.CharField(max_length=30)),
                ('rank', models.CharField(choices=[('PVT', 'PVT'), ('PV2', 'PV2'), ('PFC', 'PFC'), ('SPC', 'SPC'), ('SGT', 'SGT'), ('SSG', 'SSG'), ('SFC', 'SFC'), ('2LT', '2LT'), ('1LT', '1LT'), ('CPT', 'CPT')], max_length=5)),
                ('grade', models.CharField(choices=[('E1', 'E1'), ('E2', 'E2'), ('E3', 'E3'), ('E4', 'E4'), ('E5', 'E5'), ('E6', 'E6'), ('E7', 'E7'), ('O1', 'O1'), ('O2', 'O2'), ('O3', 'O3')], max_length=3)),
                ('pebd', models.DateField(blank=True, null=True)),
                ('date_of_rank', models.DateField(blank=True, null=True)),
                ('expiration_term_of_service', models.DateField(blank=True, null=True)),
                ('section', models.CharField(choices=[('BN STAFF', 'BN STAFF'), ('ALPHA', 'ALPHA'), ('BRAVO', 'BRAVO'), ('CHARLIE', 'CHARLIE'), ('DELTA', 'DELTA'), ('UNASSIGNED', 'UNASSIGNED')], default='UNASSIGNED', max_length=10)),
                ('team', models.CharField(choices=[('HQ', 'HQ'), ('1', '1'), ('2', '2'), ('3', '3'), ('UNASSIGNED', 'UNASSIGNED')], default='UNASSIGNED', max_length=10)),
                ('role', models.CharField(choices=[('BN FSO', 'BN FSO'), ('BN FSNCO', 'BN FSNCO'), ('AFATDS', 'AFATDS'), ('BN FO', 'BN FO'), ('BN RTO', 'BN RTO'), ('CO FSO', 'CO FSO'), ('CO FSNCO', 'CO FSNCO'), ('FO', 'FO'), ('RTO', 'RTO'), ('UNASSIGNED', 'UNASSIGNED')], default='UNASSIGNED', max_length=10)),
                ('acft_score', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(600)])),
                ('m4_qual', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('dlc_1_complete', models.BooleanField(blank=True, default=False)),
                ('blc_complete', models.BooleanField(blank=True, default=False)),
                ('dlc_2_complete', models.BooleanField(blank=True, default=False)),
                ('alc_complete', models.BooleanField(blank=True, default=False)),
                ('dlc_3_complete', models.BooleanField(blank=True, default=False)),
                ('slc_complete', models.BooleanField(blank=True, default=False)),
                ('jfo_qualified', models.BooleanField(blank=True, default=False)),
                ('drivers_license', models.BooleanField(blank=True, default=False)),
                ('is_staff', models.BooleanField(blank=True, default=False)),
                ('unit_position', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('CHARACTER', 'CHARACTER'), ('PRESENCE', 'PRESENCE'), ('INTELLECT', 'INTELLECT'), ('LEADS', 'LEADS'), ('DEVELOPS', 'DEVELOPS'), ('ACHIEVES', 'ACHIEVES'), ('OVERALL', 'OVERALL')], max_length=10)),
                ('comment_text', models.TextField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('commentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentor_coments', to=settings.AUTH_USER_MODEL)),
                ('soldier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soldier_comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
